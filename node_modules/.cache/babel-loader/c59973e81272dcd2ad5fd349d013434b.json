{"remainingRequest":"/Users/kristina/Programming/a-room-with-a-vue/node_modules/babel-loader/lib/index.js!/Users/kristina/Programming/a-room-with-a-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/kristina/Programming/a-room-with-a-vue/src/drag-n-drop.js","dependencies":[{"path":"/Users/kristina/Programming/a-room-with-a-vue/src/drag-n-drop.js","mtime":1549664436936},{"path":"/Users/kristina/Programming/a-room-with-a-vue/node_modules/cache-loader/dist/cjs.js","mtime":1549663425743},{"path":"/Users/kristina/Programming/a-room-with-a-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/kristina/Programming/a-room-with-a-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import interact from 'interact.js';\nexport default {\n  props: {\n    resizableOpt: {\n      type: Object,\n      required: false\n    },\n    resizeClass: {\n      type: String,\n      required: false,\n      default: '.interact'\n    },\n    resize: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    drag: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    var resizableSettings = {\n      preserveAspectRatio: false,\n      edges: {\n        left: true,\n        right: true,\n        bottom: true,\n        top: true\n      }\n    };\n    var draggableSettings = {\n      inertia: true,\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }\n      },\n      autoScroll: true,\n      onmove: this.dragMoveListener\n    };\n    interact(this.resizeClass).resizable(this.resizableOpt ? this.resizableOpt : resizableSettings).draggable(this.draggableOpt ? this.draggableOpt : draggableSettings).on('resizemove', this.resizeListener);\n  },\n  methods: {\n    resizeListener: function resizeListener(event) {\n      if (this.resize) {\n        var target = event.target;\n        target.style.width = \"\".concat(event.rect.width, \"px\");\n        target.style.height = \"\".concat(event.rect.height, \"px\");\n        this.$emit('onresize', event);\n      }\n    },\n    dragMoveListener: function dragMoveListener(event) {\n      if (this.drag) {\n        var target = event.target;\n        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n        target.style.webkitTransform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n        target.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n        this.$emit('ondrag', event);\n      }\n    }\n  }\n};",{"version":3,"sources":["src/drag-n-drop.js"],"names":["interact","props","resizableOpt","type","Object","required","resizeClass","String","default","resize","Boolean","drag","mounted","resizableSettings","preserveAspectRatio","edges","left","right","bottom","top","draggableSettings","inertia","restrict","restriction","endOnly","elementRect","autoScroll","onmove","dragMoveListener","resizable","draggable","draggableOpt","on","resizeListener","methods","event","target","style","width","rect","height","$emit","x","parseFloat","getAttribute","dx","y","dy","webkitTransform","transform","setAttribute"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,eAAe;AACbC,SAAO;AACLC,kBAAc;AACZC,YAAMC,MADM;AAEZC,gBAAU;AAFE,KADT;AAKLC,iBAAa;AACXH,YAAMI,MADK;AAEXF,gBAAU,KAFC;AAGXG,eAAS;AAHE,KALR;AAULC,YAAQ;AACNN,YAAMO,OADA;AAENL,gBAAU,KAFJ;AAGNG,eAAS;AAHH,KAVH;AAeLG,UAAM;AACJR,YAAMO,OADF;AAEJL,gBAAU,KAFN;AAGJG,eAAS;AAHL;AAfD,GADM;AAsBbI,SAtBa,qBAsBH;AACR,QAAMC,oBAAoB;AACxBC,2BAAqB,KADG;AAExBC,aAAO;AAAEC,cAAM,IAAR;AAAcC,eAAO,IAArB;AAA2BC,gBAAQ,IAAnC;AAAyCC,aAAK;AAA9C;AAFiB,KAA1B;AAIA,QAAMC,oBAAoB;AACxBC,eAAS,IADe;AAExBC,gBAAU;AACRC,qBAAa,QADL;AAERC,iBAAS,IAFD;AAGRC,qBAAa;AAAEN,eAAK,CAAP;AAAUH,gBAAM,CAAhB;AAAmBE,kBAAQ,CAA3B;AAA8BD,iBAAO;AAArC;AAHL,OAFc;AAOxBS,kBAAY,IAPY;AAQxBC,cAAQ,KAAKC;AARW,KAA1B;AAUA5B,aAAS,KAAKM,WAAd,EACGuB,SADH,CACa,KAAK3B,YAAL,GAAoB,KAAKA,YAAzB,GAAwCW,iBADrD,EAEGiB,SAFH,CAEa,KAAKC,YAAL,GAAoB,KAAKA,YAAzB,GAAwCX,iBAFrD,EAGGY,EAHH,CAGM,YAHN,EAGoB,KAAKC,cAHzB;AAID,GAzCY;AA0CbC,WAAS;AACPD,kBADO,0BACQE,KADR,EACe;AACpB,UAAI,KAAK1B,MAAT,EAAiB;AACf,YAAM2B,SAASD,MAAMC,MAArB;AAEAA,eAAOC,KAAP,CAAaC,KAAb,aAAwBH,MAAMI,IAAN,CAAWD,KAAnC;AACAF,eAAOC,KAAP,CAAaG,MAAb,aAAyBL,MAAMI,IAAN,CAAWC,MAApC;AACA,aAAKC,KAAL,CAAW,UAAX,EAAuBN,KAAvB;AACD;AACF,KATM;AAUPP,oBAVO,4BAUUO,KAVV,EAUiB;AACtB,UAAI,KAAKxB,IAAT,EAAe;AACb,YAAMyB,SAASD,MAAMC,MAArB;AACA,YAAMM,IAAI,CAACC,WAAWP,OAAOQ,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDT,MAAMU,EAAnE;AACA,YAAMC,IAAI,CAACH,WAAWP,OAAOQ,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDT,MAAMY,EAAnE;AAEAX,eAAOC,KAAP,CAAaW,eAAb,uBAA4CN,CAA5C,iBAAoDI,CAApD;AACAV,eAAOC,KAAP,CAAaY,SAAb,uBAAsCP,CAAtC,iBAA8CI,CAA9C;AAEAV,eAAOc,YAAP,CAAoB,QAApB,EAA8BR,CAA9B;AACAN,eAAOc,YAAP,CAAoB,QAApB,EAA8BJ,CAA9B;AACA,aAAKL,KAAL,CAAW,QAAX,EAAqBN,KAArB;AACD;AACF;AAvBM;AA1CI,CAAf","sourceRoot":"/Users/kristina/Programming/a-room-with-a-vue","sourcesContent":["import interact from 'interact.js';\n\nexport default {\n  props: {\n    resizableOpt: {\n      type: Object,\n      required: false,\n    },\n    resizeClass: {\n      type: String,\n      required: false,\n      default: '.interact',\n    },\n    resize: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    drag: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  mounted() {\n    const resizableSettings = {\n      preserveAspectRatio: false,\n      edges: { left: true, right: true, bottom: true, top: true },\n    };\n    const draggableSettings = {\n      inertia: true,\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: { top: 0, left: 0, bottom: 0, right: 0 },\n      },\n      autoScroll: true,\n      onmove: this.dragMoveListener,\n    };\n    interact(this.resizeClass)\n      .resizable(this.resizableOpt ? this.resizableOpt : resizableSettings)\n      .draggable(this.draggableOpt ? this.draggableOpt : draggableSettings)\n      .on('resizemove', this.resizeListener);\n  },\n  methods: {\n    resizeListener(event) {\n      if (this.resize) {\n        const target = event.target;\n\n        target.style.width = `${event.rect.width}px`;\n        target.style.height = `${event.rect.height}px`;\n        this.$emit('onresize', event);\n      }\n    },\n    dragMoveListener(event) {\n      if (this.drag) {\n        const target = event.target;\n        const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n        const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n        target.style.webkitTransform = `translate(${x}px, ${y}px)`;\n        target.style.transform = `translate(${x}px, ${y}px)`;\n\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n        this.$emit('ondrag', event);\n      }\n    },\n  },\n\n};\n"]}]}